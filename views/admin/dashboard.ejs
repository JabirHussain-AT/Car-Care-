
<%- include('../layout/admin/layout') %>
<%- include('../partials/admin-header-checking') %>
<link rel="stylesheet" href="/stylesheet/adminDashboard.css">
<div class="container mt-4">
   <!-- <a class="btn btn-primary"  href="/admin/download-sales-report">Excel</a> -->
   <div class="row">
        <div class="col-lg-6">
            <label for="startDate">Start Date:</label>
            <input type="date" id="startDate" class="form-control" required>
        </div>
        <div class="col-lg-6">
            <label for="endDate">End Date:</label>
            <input type="date" id="endDate" class="form-control" required>
        </div>
        <div class="col-lg-12 mt-2">
            <a href="/admin/download-salesReport-pdf"></a><button id="salerReportPdf" class="btn btn-primary">Update Sales</button>
        </div>
    </div>
  
    <div class="row">
      <div class="col-lg-6">
        <div class="card mb-4" style="background: linear-gradient(65deg, rgb(255, 255, 255), rgb(148, 166, 163));">
          <h2 class="card-header" style="font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;">Sale's Analysis</h2>
          <div class="card-body">
              <div class="dropdown">
                  <button class="btn btn-warning dropdown-toggle" type="button" id="timeIntervalDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                    By Day
                  </button>
                  <ul class="dropdown-menu" aria-labelledby="timeIntervalDropdown">
                      <li><a class="dropdown-item"  id="byDayOption">By Day</a></li>
                      <li><a class="dropdown-item"  id="byMonthOption">By Month</a></li>
                    <li><a class="dropdown-item"  id="byYearOption">By Year</a></li>
                  </ul>
              </div>
            <canvas id="salesGraphAmount"></canvas>
           
          </div>
        </div>
      </div>
      <!-- number of sales analysis -->
      <div class="col-lg-6">
        <div class="card mb-4" style="background: linear-gradient(65deg, rgb(255, 255, 255), rgb(148, 166, 163));">
          <h2 class="card-header" style="font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;">Number of Sales</h2>
          <div class="card-body mt-4 pt-4">  
            <canvas id="salesGraphCount"></canvas>
          </div>
        </div>
      </div>
      <!--  -->
  <% if (orders) {%>
      <div class="col-lg-12">
          <div class="card mb-4" style="background: linear-gradient(to right, rgb(255, 255, 255), rgb(148, 166, 163));">
              <h2 class="card-header">Latest Orders</h2>
              <div class="card-body">
                  <div class="table-responsive">
                      <table class="table table-bordered">
                          <thead>
                              <tr>
                                  <th>Order ID</th>
                                  <th>Date</th>
                                  <th>Total</th>
                                  <th>Payment</th>
                                  <th>Status</th>
                              </tr>
                              <% orders.reverse().forEach((order) => { %>
                            <tr>
                                <td><%= order._id %></td>
                                <td><%= order.OrderedDate %></td>
                                <td><%= order.TotalAmount %></td>
                                <td><%= order.PaymentMethord %></td>
                                <td><%= order.PaymentStatus %></td>
                            </tr>
                            <% }) %>
                          </thead>
                          <tbody id="latestOrdersTable">
                          </tbody>
                      </table>
                      <% if (orders.length > 0) { %>
                        <div class="d-flex justify-content-between align-items-center mt-3">
                            <p>Showing <%= (currentPage - 1) * perPage + 1 %>-
                              <%= currentPage * perPage  %> results from <%= totalCount %></p>
                            <ul class="pagination">
                              <% for (let i = 1; i <= totalPages; i++) { %>
                                <li class="page-item <%= currentPage === i ? 'active' : '' %>">
                                  <a class="page-link" href="?page=<%= i %>"><%= i %></a>
                                </li>
                              <% } %>
                            </ul>
                          </div>
                          <% } else { %>
                            <p>No results found.</p>
                          <% } %>
                  </div>
              </div>
          </div>
      </div>
  <% } %>
  <% if(bestSeller) {%>
      <div class="col-lg-12">
          <div class="card" style="background: linear-gradient(to right,rgb(255, 255, 255), rgb(148, 166, 163));">
              <h2 class="card-header">Best Selling</h2>
              <div class="card-body">
                  <div class="table-responsive">
                      <table class="table table-bordered">
                          <thead>
                              <tr>
                                  <th>Product Image</th>
                                  <!-- <th>Product</th> -->
                                  <th>Product Name</th>
                                  <th>Price</th>
                                  <th>Status</th>
                                  <th>Sold</th>
                              </tr>
                          </thead>
                          <tbody id="bestSellersTable">
                            <% bestSeller.forEach((product)=>{ %>
                            <tr>
                                <td><img width="50px" src="/uploads/<%=product. productDetails.images[0] %> " alt=""></td>
                                <td><%=product.productDetails.ProductName %> </td>
                                <td><%=product.productDetails.Price %> </td>
                                <td><%=product.productDetails.Status %> </td>
                                <td><%=product.totalCount %> </td>
                            </tr>
                       <% }) %>
                          </tbody>
                      </table>
                  </div>
              </div>
          </div>
      </div>
    </div>
  </div>
  <% } %>
  <style>
    .header {
    background-color: #333;
    color: #fff;
    padding: 20px;
    text-align: center;
    min-height: 80px; 
  }
  
    .container {
      display: flex;
      flex-wrap: wrap;
      justify-content: space-between;
      padding: 20px;
    }
  
    .card {
      background-color: #fff;
      padding: 20px;
      border-radius: 8px;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
      margin-bottom: 20px;
      flex: 1;
    }

    #salesGraph {
    height: 50px; /* Adjust the height as needed */
}
  
    .graph {
      margin-right: 0;
    }
  
    .table-responsive {
      overflow-x: auto;
    }
  </style>
  <!-- Add these scripts before your custom script -->
  <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script>
      updateSalesGraph("day");
  document.getElementById("byDayOption").addEventListener("click", function() {
      document.getElementById("timeIntervalDropdown").textContent = "By Day";
      updateSalesGraph("day");
  });
  
  document.getElementById("byMonthOption").addEventListener("click", function() {
      document.getElementById("timeIntervalDropdown").textContent = "By Month";
      updateSalesGraph("month");
  });
  
  document.getElementById("byYearOption").addEventListener("click", function() {
      document.getElementById("timeIntervalDropdown").textContent = "By Year";
      updateSalesGraph("year");
  });
  
  
  async function fetchSalesData(timeInterval) {
      try {
          let response;
          if (timeInterval === "day") {
              console.log("daysss");
              response = await fetch("/admin/count-orders-by-day");
          } else if (timeInterval === "month") {
              console.log("monthsss");
              response = await fetch("/admin/count-orders-by-month");
          } else if (timeInterval === "year") {
              console.log("yearssss");
              response = await fetch("/admin/count-orders-by-year");
          } else {
              return false;
          }
  
          console.log("its response", response);
  
          if (!response.ok) {
              throw new Error("Network response was not ok");
          }
  
          const data = await response.json();
          return data;
      } catch (error) {
          console.error("Error fetching data:", error);
      }
  }
  
  
  
    // async function fetchOrdersAndSales() {
    //   try {
    //     const response = await fetch("/admin/latestOrders");
    //     if (!response.ok) {
    //         throw new Error("Network response was not ok");
    //       }
    //       const data = await response.json();
    //       console.log("it is the response from orders", data.latestOrders);
    //     return data;
    //   } catch (error) {
    //     console.log("Error fetching data", error);
    //   }
    // }
  
    async function updateSalesGraph(timeInterval) {
      const salesData = await fetchSalesData(timeInterval);
      console.log(salesData, "hereee");
  
      // Get the canvas element
      const Amount = document.getElementById("salesGraphAmount").getContext("2d");
      const Count = document.getElementById("salesGraphCount").getContext("2d");
  
      // If a chart already exists, destroy it
      if (window.myChart1) {
          window.myChart1.destroy();
      }
      if (window.myChart2) {
          window.myChart2.destroy();
      }
      const barColors = ["blue", "green","white","orange","brown"]
  
      window.myChart1 = new Chart(Amount, {
          type: "line",
          data: {
              labels: salesData.labels,
              datasets: [
                  {
                      label: "Sales",
                      data: salesData.data,
                      backgroundColor: barColors,
                      borderColor: "rgba(75, 192, 192, 1)",
                      borderWidth: 4,
                  },
              ],
          },
          options: {
              scales: {
                  x: [{
                      grid: {
                          display: true
                      }
                  }],
                  y: [{
                      beginAtZero: true,
                      maxTicksLimit: 5
                  }]
              }
          },
      });
      window.myChart2 = new Chart(Count, {
          type: "line",
          data: {
              labels: salesData.labels,
              datasets: [
                  {
                      label: "Sales",
                      data: salesData.Count,
                      backgroundColor: barColors,
                      borderColor: "rgba(75, 192, 192, 1)",
                      borderWidth: 4,
                  },
              ],
          },
          options: {
              scales: {
                  x: [{
                      grid: {
                          display: true
                      }
                  }],
                  y: [{
                      beginAtZero: true,
                      maxTicksLimit: 5
                  }]
              }
          },
      });
  }
  document.getElementById("salerReportPdf").addEventListener("click", function () {
        const startDate = document.getElementById("startDate").value;
        const endDate = document.getElementById("endDate").value;
        window.location.href = `/admin/download-salesReport-pdf?startDate=${startDate}&endDate=${endDate}`;
    });
  
  </script>