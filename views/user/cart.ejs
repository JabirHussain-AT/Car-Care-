<%- include('../layout/user/layout') %>
  <link rel="stylesheet" href="/stylesheet/user-cart.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" />
  <%- include('../partials/user-header') %>


    <% if(userCart && userCart.Products && userCart.Products.length>0) { %>
      <div class="container-fluid banner">
        <div class="row">
          <div class="col-12 text-center">
            <h1>Cart</h1>
          </div>
        </div>
      </div>
      <!-- cart + summary -->
      <section class="bg-total my-5">
        <div class="container-fluid">
          <div class="row">
            <!-- cart -->
            <div class="col-lg-9">
              <div class="card border shadow-0">
                <div class="m-4">
                  <!-- <div class="d-flex justify-content-center">
                    <h4 class="card-title mb-4">Your shopping cart</h4>
                </div>
                 -->
                  <div class="head d-flex justify-content-between">
                    <P>Product</P>
                    <p>Quantity</p>
                    <p>Actions</p>
                  </div>
                  <% userCart.Products.forEach((cartProducts)=>{ %>
                    <div class="row gy-3 mb-4">
                      <div class="col-lg-5">
                        <div class="me-lg-5">
                          <div class="d-flex">
                            <img src="/uploads/<%= cartProducts.ProductId.images[0] %>" class="border rounded me-3"
                              style="width: 96px; height: 96px" />
                            <div class="">
                              <a href="#" class="nav-link">
                                <%= cartProducts.ProductId.ProductName %>
                              </a>
                            </div>
                          </div>
                        </div>
                      </div>
                      <div class="col-lg-2 col-sm-6 col-6 d-flex flex-column">
                        <div class="input-group">
                          <div class="input-group-prepend">
                            <button class="btn btn-dark decrease-quantity"
                              data-product-id="<%=cartProducts.ProductId._id %>">
                              -
                            </button>
                          </div>
                          <input type="text" class="form-control text-center"
                            id="count_<%=cartProducts.ProductId._id %>" value="<%=cartProducts.Quantity %>"
                            data-available-quantity="<%=cartProducts.ProductId.
AvailableQuantity %>" />
                          <div class="input-group-append">
                            <button class="btn btn-dark increase-quantity"
                              data-product-id="<%= cartProducts.ProductId._id %>"
                              data-max-quantity="<%= cartProducts.ProductId.AvailableQuantity %>">
                              +
                            </button>

                          </div>
                        </div>
                        <div class="">₹
                          <text class="h6 " ;" id="productAmount_<%=cartProducts.ProductId._id %>"
                            data-value="<%= cartProducts.ProductId.DiscountAmount %>">
                            <%= cartProducts.ProductId.DiscountAmount * cartProducts.Quantity %>
                          </text>/-
                          <br />
                          <small class="text-muted text-nowrap">
                            ₹<%= cartProducts.ProductId.DiscountAmount %> / per item
                          </small>
                        </div>
                      </div>
                      <div
                        class="col-lg col-sm-6 d-flex justify-content-sm-center justify-content-md-start justify-content-lg-center justify-content-xl-end mb-2">
                        <div class="float-md-end">
                          <a href="#!" class="btn btn-light border px-2 icon-hover-primary"><i
                              class="fas fa-heart fa-lg px-1 text-secondary"></i></a>
                          <a href="/deleteItem/<%= cartProducts.ProductId._id %>"
                            class="btn btn-light border text-danger icon-hover-danger">
                            Remove</a>
                          <div id="outOfStock_<%= cartProducts.ProductId._id %>" class="text-danger"
                            style="display: none;">Out of Stock</div>
                          <div id="stockMessage_<%= cartProducts.ProductId._id %>" class="text-danger"
                            style="display: none;">
                            Only <%= cartProducts.ProductId.AvailableQuantity %> items in stock
                          </div>
                        </div>


                      </div>
                    </div>
                    <% }); %>
                      
                </div>

                <div class="border-top pt-4 mx-4 mb-4">
                  <p>
                    <i class="fas fa-truck text-muted fa-lg"></i> Free Delivery within
                    1-2 weeks
                  </p>
                  <p class="text-muted"></p>
                </div>
              </div>
            </div>

            <!-- coupon code  -->
            <div class="col-lg-3 coupon-bg">
              <div class="card mb-3 border shadow-0">
                <div class="card-body  coupon-bg">
                  <form>
                    <div class="form-group">
                      <label class="form-label">Have you coupon?</label>
                      <div class="input-group">
                        <input type="text" class="form-control border" name="" placeholder="Coupon code" />
                        <button class="btn btn-light border">Apply</button>
                      </div>
                    </div>
                  </form>
                </div>
              </div>




              <div class="card card-cart">
                <div class="card-body">
                  <div class="d-flex flex-column align-items-center justify-content-center">
                    <h4
                      style="font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;"
                      class="card-title">Cart Totals</h4>
                  </div>

                  <!-- First Table -->
                  <table class="table table-borderless">
                    <tbody>
                      <tr>
                        <td style="width: 60%; font-family: 'Times New Roman', Times, serif">Sub Total :</td>
                        <td style="width: 60%; font-family: 'Times New Roman', Times, serif" id="subtotalAmountCell">Rs
                          0.00</td>
                      </tr>
                      <tr>
                        <td style="width: 60%; font-family: 'Times New Roman', Times, serif">Coupon Amount :</td>
                        <td style="width: 60%; font-family: 'Times New Roman', Times, serif">Rs -0.00</td>
                      </tr>
                      <tr>
                        <td style="width: 60%; font-family: 'Times New Roman', Times, serif;">Total Quantity : </td>
                        <td id="totalItemsCell">Rs 29000</td>
                      </tr>
                      <tr>
                        <td>Delivery :</td>
                        <td><del>Rs 40</del><br> <span class="text-success">Free</span></td>
                      </tr>
                      <!-- Table Rows Here -->
                    </tbody>
                  </table>



                  <!-- Second Table -->
                  <table class="table table-borderless">
                    <tbody>
                      <tr>
                        <hr>
                        <!-- Table Row Content Here -->
                        <td>
                          <h6 style="font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;">Total :
                          </h6>
                        </td>
                        <form action="/cart" method="post">
                          <td>
                            <input type="text" id="totalAmountCell" class="transparent-input " readonly>
                          </td>
                          <input type="hidden" id="hiddenTotalAmount" name="hiddenTotalAmount">

                      </tr>
                    </tbody>
                  </table>

                  <!-- Button -->

                  <div class="d-flex justify-content-center align-items-center">

                    <button type="submit" id="placeOrderButton" class="btn btn-outline-dark btn-rounded">Place
                      Order</button>
                  </div>
                  </form>
                  <div class="d-flex justify-content-center align-items-center"><a href="/shop " class="mt-3">Back to
                      Shop</a></div>
                      <% } else { %>
                        <div class="container mt-4">
                          <div class="row justify-content-center">
                              <div class="col-md-6 text-center">
                                  <img src="/assets/Empty Cart.png" alt="Cart Empty Image" class="img-fluid">
                                  <h3>Your cart is empty</h3>
                                  <a href="/shop" class="btn btn-primary">Back to Shop</a>
                              </div>
                          </div>
                        <% } %>
                </div>
              </div>
            </div>
            <script>

              ///document.addEventListener("DOMContentLoaded", () => {
              // ... existing code ...

              document.addEventListener("DOMContentLoaded", () => {
                const decreaseButtons = document.querySelectorAll(".decrease-quantity");
                const increaseButtons = document.querySelectorAll(".increase-quantity");

                function updateTotalAmount() {
                  let totalAmount = 0;
                  let totalItems = 0;
                  let subtotalAmount = 0;
                  let isOutOfStock = false;

                  // Get all product rows
                  const productRows = document.querySelectorAll('.row.gy-3.mb-4');
                  productRows.forEach((row) => {
                    const productId = row.querySelector('.decrease-quantity').getAttribute('data-product-id');
                    const quantityInput = row.querySelector(`#count_${productId}`);
                    const productAmount = parseFloat(row.querySelector(`#productAmount_${productId}`).textContent);

                    const availableQuantity = parseInt(quantityInput.getAttribute('data-available-quantity'), 10);
                    const enteredQuantity = parseInt(quantityInput.value, 10);

                    if (enteredQuantity <= availableQuantity) {
                      // Only update total if entered quantity is valid
                      totalAmount += productAmount;
                      subtotalAmount += productAmount;
                      totalItems += enteredQuantity;
                    } else {
                      // Reset the entered quantity to available quantity
                      quantityInput.value = availableQuantity;
                      isOutOfStock = true;
                    }

                    // Hide the "Out of Stock" message
                    const outOfStockMessage = document.getElementById(`outOfStock_${productId}`);
                    if (outOfStockMessage) {
                      outOfStockMessage.style.display = 'none';
                    }
                  });

                  // Update the total amount in the HTML
                  const totalAmountCell = document.getElementById('totalAmountCell');
                  const placeOrderButton = document.getElementById('placeOrderButton');

                  if (isOutOfStock) {
                    totalAmountCell.value = 'Out of Stock';
                    placeOrderButton.disabled = true;
                  } else {
                    totalAmountCell.value = `Rs ${totalAmount.toFixed(2)}`;
                    placeOrderButton.disabled = false;
                  }

                  // Update other elements as before
                  const subtotalAmountCell = document.getElementById('subtotalAmountCell');
                  subtotalAmountCell.textContent = `Rs ${subtotalAmount.toFixed(2)}`;

                  const totalItemsCell = document.getElementById('totalItemsCell');
                  totalItemsCell.textContent = `${totalItems} Items`;

                  const hiddenTotalAmount = document.getElementById('hiddenTotalAmount');
                  hiddenTotalAmount.value = totalAmount.toFixed(2);
                }

                // Function to send AJAX request to update quantity
                async function updateQuantity(productId, change) {
                  try {
                    const response = await fetch("/updateQuantity", {
                      method: "POST",
                      headers: {
                        "Content-Type": "application/json",
                      },
                      body: JSON.stringify({ productId, change }),
                    });

                    if (response.ok) {
                      const data = await response.json();
                      console.log("Received new quantity from server:", data.newQuantity);

                      const quantityInput = document.getElementById(`count_${productId}`);
                      const productAmount = document.getElementById(`productAmount_${productId}`);
                      const existingValue = productAmount.getAttribute('data-value');
                      // Get stock directly from productId in the EJS template



                      if (quantityInput) {
                        quantityInput.value = data.newQuantity;
                        productAmount.textContent = existingValue * data.newQuantity;

                        // Calculate and update the total amount
                        updateTotalAmount();
                        // Get the "Place Order" button
                        // const placeOrderButton = document.getElementById('placeOrderButton');

                        // Add a click event listener to the button
                        // placeOrderButton.addEventListener('click', () => {
                        //   // Get the total amount from the HTML
                        //   const totalAmount = document.getElementById('totalAmountCell').textContent;

                        //   // Encode the total amount for URL
                        //   const encodedTotalAmount = encodeURIComponent(totalAmount);

                        //   // Construct the URL with the total amount
                        //   const checkoutURL = `/checkOut?totalAmount=${encodedTotalAmount}`;

                        //   // Navigate to the checkout URL
                        //   window.location.href = checkoutURL;
                        // });

                        // Disable the decrease button only for specific products
                        const decreaseButton = document.querySelector(`.decrease-quantity[data-product-id="${productId}"]`);
                        if (decreaseButton) {
                          decreaseButton.disabled = data.newQuantity <= 1;
                        }
                        // Get the "Out of Stock" message

                        const stockMessage = document.getElementById(`stockMessage_${productId}`);
                        if (stockMessage.style.display === 'block') {
                          console.error("not coming")
                          stockMessage.style.display = 'none';
                        }
                      }
                    } else {
                      console.error("Error updating quantity:", response.statusText);
                    }
                  } catch (error) {
                    console.error("Error updating quantity:", error);
                  }
                }

                // Initial check for each decrease button
                decreaseButtons.forEach((button) => {
                  const productId = button.getAttribute("data-product-id");
                  const quantityInput = document.getElementById(`count_${productId}`);
                  const initialQuantity = quantityInput ? parseInt(quantityInput.value, 10) : 0;
                  button.disabled = initialQuantity <= 1;
                });

                // Add event listeners to decrease buttons
                decreaseButtons.forEach((button) => {
                  button.addEventListener("click", () => {
                    const productId = button.getAttribute("data-product-id");
                    updateQuantity(productId, -1); // Decrease quantity by 1
                  });
                });

                increaseButtons.forEach((button) => {
                  button.addEventListener("click", () => {
                    const productId = button.getAttribute("data-product-id");
                    const maxQuantity = parseInt(button.getAttribute("data-max-quantity"), 10);
                    const quantityInput = document.getElementById(`count_${productId}`);
                    const enteredQuantity = parseInt(quantityInput.value, 10);

                    // Check if the entered quantity is less than the available quantity
                    if (enteredQuantity < maxQuantity) {
                      updateQuantity(productId, 1); // Increase quantity by 1
                    } else {
                      // Display a message or handle as needed when max quantity is reached
                      const stockMessage = document.getElementById(`stockMessage_${productId}`);
                      if (stockMessage) {
                        stockMessage.innerHTML = `Only ${maxQuantity} items in stock`;
                        stockMessage.style.display = 'block';
                      }
                    }
                  });
                });

                // Update total amount on page load
                updateTotalAmount();
              });

            </script>