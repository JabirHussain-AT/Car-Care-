<%- include('../layout/user/layout') %>
<link rel="stylesheet" href="/stylesheet/user-checkOut.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css"/>
<%- include('../partials/user-header') %>

<div class="container custom-container main">
  <div class="row">
    <!-- Left Column - Col-7 -->
    <div class="col-md-7">
      <div class="card">
        <div class="card-body">
          <h5 class="card-title">Saved Addresses</h5>
          
          <!-- Address Cards -->
          <% if(user && user.Address && user.Address.length > 0) { %>
            <% user.Address.forEach((address, index) => { %>
              <div class="address-card row">
                <div class="col-1">
                  <input type="radio" name="address" id="<%= 'address' + (index + 1) %>" value="<%= address.address %>" data-name="<%= address.Name %>" data-address="<%= address.address %>" data-zip="<%= address.zip %>"  data-state="<%= address.state %>"  data-city="<%= address.city %>" data-mobile="<%= address.mobileNumber %>" <%= index === 0 ? 'checked' : '' %>>
                </div>
                <div class="col-4">
                  <div class="address-line">Name :</div>
                  <div style="height: 8vh;" class="address-line">Address :</div>
                  <div class="address-line">City:</div>
                  <div class="address-line">State:</div>
                  <div class="address-line">ZIP:</div>
                  <div class="address-line">Mob No :</div>
                 
                </div>
                <div class="col-6">
                  <div class="address-value"><%= address.Name %></div>
                  <div class="address-value"><%= address.address %></div>
                  <div class="address-value"><%= address.city %></div>
                  <div class="address-value"><%= address.state %></div>
                  <div class="address-value"><%= address.zip %></div>
                  <div class="address-value"><%= address.mobileNumber %></div>
                </div>
              </div>
            <% }) %>
          <% } %>
          
          <!-- Add more address cards... -->
          
          <!-- Add Address Link with Icon -->
          <button  class="btn btn-link" data-bs-toggle="modal" data-bs-target="#addAddressModal">
            <i class="fas fa-plus-circle"></i> Add Address
           </button>
        </div>
      </div>
    </div>

    <!-- Right Column - Col-5 -->
    <div class="col-md-5">
      <div class="card">
        <div class="card-body">
          <h5 class="card-title">Payment Methods</h5>
          <form id="payNow">
          <!-- <form action="/checkOut" method="post"> -->
            <input type="hidden" required id="selectedAddress" name="selectedAddress" value="">
            <div class="form-check">
              <input class="form-check-input" type="radio" name="paymentMethod" id="cod" value="COD" checked>
              <label class="form-check-label" for="cod">
                Cash on Delivery (COD)
              </label>
            </div>
            <div class="form-check">
              <input class="form-check-input" type="radio" name="paymentMethod" id="online" value="online">
              <label class="form-check-label" for="online">
                Online Payment
              </label>
            </div>
            <div class="form-check">
              <input class="form-check-input" type="radio" name="paymentMethod" id="wallet" value="Wallet">
              <label class="form-check-label" for="Wallet">
                Wallet Payment <span><img class="img-fluid mb-1" width="28px" height="auto" src="/assets/wallet-removebg-preview.png" alt=""></span>
                <% if (Wallet) { %>
                    <p class="text-primary ml-1" style="font-size: small; font-family:Arial, Helvetica, sans-serif;">WALLET BALANCE :â‚¹ <%= Wallet.WalletAmount %> /-</p>
                  <% } %>
                <p class="text-info mb-3 text-danger" style="font-size: small;" id="walletWarning"></p>

              </label>
            </div>
            <div class=" justify-content-center">
            
                <button class="btn btn-success mt-4" id="rzp-button1" type="button">Confirm Order</button>
      
              <a href="/shop"><button class="btn btn-secondary mt-4">Back to Shop</button></a>
              <!-- <button >Pay with Razorpay</button> -->
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>
</div>




<!-- ////////////////////hufdvdkjvd -->

<div class="modal fade" id="addAddressModal" tabindex="-1" aria-labelledby="addAddressModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="addAddressModalLabel">Add Address</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">x</button>
      </div>
      <div class="modal-body">

        <div class="card">
          <div class="card-body">
            <!-- <h2 class="card-title text-center">Add Address</h2>
             -->
            <form action="/checKoutaddAddress" method="post">
              <div class="mb-3">
                <label for="firstName" class="form-label">Full Name</label>
                <input type="text" class="form-control" id="firstName" name="Name" required>
              </div>
              
              <div class="mb-3">
                <label for="address" class="form-label">Address</label>
                <textarea class="form-control" id="address" name="address" rows="3" required></textarea>
              </div>
              
              <div class="mb-3">
                <label for="city" class="form-label">City</label>
                <input type="text" class="form-control" id="city" name="city" required>
              </div>

              <div class="mb-3">
                <label for="State" class="form-label">State</label>
                <input type="text" class="form-control" id="State" name="state" required>
              </div>
              
              <div class="mb-3">
                <label for="zip" class="form-label">Zip Code</label>
                <input type="text" class="form-control" id="zip" name="zip" required>
              </div>

              <div class="mb-3">
                <label for="mobileNumber" class="form-label">Mobile Number</label>
                <input type="tel" class="form-control" id="mobileNumber" name="mobileNumber" required>
              </div>
              
              <button type="submit" class="btn btn-primary">Add Address</button>
            </form>
            
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
  <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<!-- ... your existing HTML code ... -->

<script>
  document.addEventListener("DOMContentLoaded", () => {
  
  const confirmOrderButton = document.querySelector('#rzp-button1');
  confirmOrderButton.addEventListener('click', async () => {
    const selectedAddressRadio = document.querySelector('input[name="address"]:checked');

    //check if it has value for submitting other wise trigger a swal
    if (!selectedAddressRadio) {
    // alert('Please add an address before confirming the order.');
    Swal.fire({
           icon: 'error',
           title: 'Oops...',
           text: 'Forget to add Shipping Address',
           footer: '<button  id="addAddressButton" class="btn btn-link" data-bs-toggle="modal" data-bs-target="#addAddressModal"> <i class="fas fa-plus-circle"></i> Add Address</button>',
})
     const addAddressButton = document.getElementById('addAddressButton');
     addAddressButton.addEventListener('click',()=>{
      Swal.close();
      $('#addAddressModal').modal('show');
    })
    return; // Stop further execution
  }

    const fullAddressDetails = {
      name: selectedAddressRadio ? selectedAddressRadio.dataset.name : '',
      address: selectedAddressRadio ? selectedAddressRadio.dataset.address : '',
      pincode: selectedAddressRadio ? selectedAddressRadio.dataset.zip : '',
      city: selectedAddressRadio ? selectedAddressRadio.dataset.city : '',
      state: selectedAddressRadio ? selectedAddressRadio.dataset.state : '',
      mobile: selectedAddressRadio ? selectedAddressRadio.dataset.mobile : '',
    };

    //check stock is left or not
    const stockCheckResponse = await checkStockConfirmation();
    if (!stockCheckResponse.ConfirmedStock) {
        Swal.fire({
            icon: 'error',
            title: 'Oops...',
            text: 'Some products are out of stock',
            footer: '<a href="/cart">View Out of Stock Products</a>'
        });
        return; // Stop further execution
    }
    async function checkStockConfirmation() {
    try {
        const response = await fetch('/confirmStock', {
            method: 'GET',
        });

        if (!response.ok) {
            throw new Error('Failed to confirm stock');
        }

        const result = await response.json();
        return result;
    } catch (error) {
        console.error('Error:', error.message);
        return { ConfirmedStock: false };
    }
}
    // 
    
    
    console.log('Selected Address:', fullAddressDetails);
    try {
      const response = await fetch('/checkOut', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          selectedAddress: JSON.stringify(fullAddressDetails),
          paymentMethod: document.querySelector('input[name="paymentMethod"]:checked').value,
        }),
      });
       if(response.cod===true){
        location.href(`/orderPlaced/${response.orderid}`)
       }
      if (!response) {
        throw new Error('Failed to create Razorpay order');
      }
        
      const orderData = await response.json();
      // console.log(orderData,"its order data from the ajax in checkout page")
      if(orderData.cod===true){
        location.href = `/orderPlaced/${orderData.orderid}`
       }else if(orderData.walletPurchase === true){
          location.href = `/orderPlaced/${orderData.orderid}`
       }else if(orderData.message){
             // Display the message in the walletWarning paragraph tag
              const walletWarning = document.getElementById('walletWarning');
              walletWarning.innerText = orderData.message;
              setTimeout(() => {
                location.href
              }, 3000);
       }
      console.log(orderData.paymentDetials.response.amount,"hi this is the amount")
      console.log('Razorpay Order Data:', orderData);

      // Use orderData to configure the Razorpay options and initiate payment
      var options = {
        "key": "rzp_test_sVxmHMGOnZJCCm",
        "amount": orderData.paymentDetials.response.amount,
        "currency": orderData.currency,
        "name": "Car Care",
        "description": "Test Transaction",
        "image": "https://example.com/your_logo",
        "order_id": orderData.paymentDetials.response.order.id,
        "handler": function (response) {
          console.log(response,"rsponse in handler")
          verifyPayment(response,orderData.paymentDetials.order)
          
         },
        "prefill": {
          "name": " safeer",
          "email": "gaurav.kumar@example.com",
          "contact": "9000090000",
        },
        "notes": {
          "address": "Razorpay Corporate Office",
        },
        "theme": {
          "color": "#3399cc",
        },
      };

      var rzp1 = new Razorpay(options);
      rzp1.on('payment.failed', function (response) {
        alert(response.error.code);
        alert(response.error.description);
        alert(response.error.source);
        alert(response.error.step);
        alert(response.error.reason);
        alert(response.error.metadata.order_id);
        alert(response.error.metadata.payment_id);
      });

      rzp1.open();
    } catch (error) {
      console.error('Error:', error.message);
    }
  });

  // Prevent form submission and handle it with AJAX
  const payNowForm = document.getElementById('payNow');
  payNowForm.addEventListener('submit', async (event) => {
    event.preventDefault();

    const formData = new FormData(payNowForm);
    const formObject = {};
    formData.forEach((value, key) => {
      formObject[key] = value;
    });

    try {
      const ajaxResponse = await fetch('/checkOut', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(formObject),
      });

      if (!ajaxResponse.ok) {
        throw new Error('Failed to submit form data');
      }

      const responseData = await ajaxResponse.json();
      console.log('Form Submission Response:', responseData);

      // Handle the response as needed
    } catch (error) {
      console.error('Error:', error.message);
    }
  });
  function verifyPayment(payment, order) {
    console.log('now in verifyPayment')
    $.ajax({
      url:'/verify-payment',
      data : {
        payment,
        order
      },
      method : "post",
      success:(response)=>{
        if(response.success){
          console.log(order,"order reached success stage of the razor pay");
          // alert("Payment Successfull")
          location.href = `/orderPlaced/${order._id}`
        }else{
          alert("Payment Failed")
        }
      }
    })
}

});

</script>